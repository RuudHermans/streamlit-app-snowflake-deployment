name: Deploy Streamlit App to Snowflake

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [development, acceptance, production]
    environment:
      name: ${{ matrix.environment }}
      url: ${{ env.APP_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install SnowSQL (Debug Mode)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
      
          # Download the official SnowSQL installer
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.3/linux_x86_64/snowsql-1.3.2-linux_x86_64.bash
      
          # Verify the installer was downloaded correctly
          if [ ! -s snowsql-1.3.2-linux_x86_64.bash ]; then
            echo "Error: Failed to download SnowSQL installer."
            exit 1
          fi
      
          # Run the installer in verbose mode and log output
          bash -x snowsql-1.3.2-linux_x86_64.bash -y > snowsql_install.log 2>&1
      
          # Check the installation log for errors
          if grep -i "error" snowsql_install.log; then
            echo "❌ Error detected during SnowSQL installation:"
            cat snowsql_install.log
            exit 1
          fi
      
          # Verify installation
          /usr/bin/snowsql --version


      - name: Read App Name from snowflake_app.yml
        id: app_name
        run: |
          APP_NAME=$(python -c "import yaml; print(yaml.safe_load(open('app/snowflake_app.yml'))['app_name'])")
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Build Snowflake App URL
        id: build_url
        run: |
          ENV_PREFIX=${{ matrix.environment }}
          APP_URL="https://${{ secrets.SNOWFLAKE_ACCOUNT }}.snowflakecomputing.com/${{ secrets.SNOWFLAKE_DATABASE }}/${{ secrets.SNOWFLAKE_SCHEMA }}/${ENV_PREFIX}_${APP_NAME}"
          echo "APP_URL=$APP_URL" >> $GITHUB_ENV

      - name: Set Environment Name in Uppercase
        run: echo "ENV_NAME_UPPER=$(echo '${{ matrix.environment }}' | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Deploy to ${{ matrix.environment }}
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets[format('SNOWFLAKE_USER_{0}', env.ENV_NAME_UPPER)] }}
          SNOWFLAKE_PASSWORD: ${{ secrets[format('SNOWFLAKE_PASSWORD_{0}', env.ENV_NAME_UPPER)] }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          ENVIRONMENT: ${{ matrix.environment }}
          APP_NAME: ${{ env.APP_NAME }}
        run: |
          snowsql -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USER -p $SNOWFLAKE_PASSWORD -r $SNOWFLAKE_ROLE -d $SNOWFLAKE_DATABASE -s $SNOWFLAKE_SCHEMA -q "CREATE OR REPLACE STREAMLIT APP ${ENVIRONMENT}_${APP_NAME} FROM @app/app.py;"

      - name: Output Deployment URL
        run: |
          echo "Deployment URL: $APP_URL"
